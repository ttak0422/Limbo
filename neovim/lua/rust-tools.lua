-- [nfnl] Compiled from neovim/fnl/rust-tools.fnl by https://github.com/Olical/nfnl, do not edit.
local M = require("rust-tools")
local E = require("rust-tools.executors")
local tools = {executor = E.toggleterm, on_initialized = nil, reload_workspace_from_cargo_toml = true, inlay_hints = {auto = false}, hover_actions = {border = {[{"\226\148\143", "FloatBorder"}] = {"\226\148\129", "FloatBorder"}, [{"\226\148\147", "FloatBorder"}] = {"\226\148\131", "FloatBorder"}, [{"\226\148\155", "FloatBorder"}] = {"\226\148\129", "FloatBorder"}, [{"\226\148\151", "FloatBorder"}] = {"\226\148\131", "FloatBorder"}}, max_width = nil, max_height = nil, auto_focus = false}}
local on_attach = dofile(args.on_attach_path)
local capabilities = dofile(args.capabilities_path)
local rust_analyzer = {assist = {expressionFillDefault = "todo"}, cachePriming = {enable = true, numThreads = 0}, cargo = {autoreload = true, buildScripts = {enable = true, useRustcWrapper = true, unsetTest = {"core"}, noSysroot = false}}, check = {allTargets = true, checkOnSave = true, extraArgs = {}}, completion = {autoimport = {enable = true}, autoself = {enable = true}, callable = {snippets = "fill_arguments"}, postfix = {enable = true}, privateEditable = {enable = false}}, diagnostics = {enable = true, disabled = {}, experimental = {enable = false}, remapPrefix = {}, warningsAsHint = {}, warningsAsInfo = {}}, files = {excludeDirs = {}, watcher = "client"}, highlightRelated = {breakPoints = {enable = true}, exitPoints = {enable = true}, references = {enable = true}, yieldPoints = {enable = true}}, hover = {actions = {enable = true, debug = {enable = true}, gotoTypeDef = {enable = true}, implementations = {enable = true}, references = {enable = true}, run = {enable = true}}, documentation = {enable = true}, links = {enable = true}}, imports = {granularity = {group = "crate", enforce = false}, group = {enable = true}, merge = {glob = true}, prefix = "plain"}, joinLines = {joinAssignments = true, joinElseIf = true, removeTrailingComma = true, unwrapTrivialBlock = true}, lens = {enable = true, debug = {enable = true}, forceCustomCommands = true, implementations = {enable = true}, references = {atd = {enable = false}, enumVariant = {enable = false}, method = {enable = false}, trait = {enable = false}, run = {enable = true}}}, linkedProjects = {}, notifications = {cargoTomlNotFound = true}, procMacro = {enable = true, attributes = {enable = true}, ignored = {}}, runnables = {extraArgs = {}}, rustfmt = {extraArgs = {}, rangeFormatting = {enable = false}}, semanticHighlighting = {strings = {enable = true}}, signatureInfo = {detail = "full", documentation = {enable = true}}, typing = {autoClosingAngleBrackets = {enable = false}}, workspace = {symbol = {search = {kind = "only_types", limit = 128, scope = "workspace"}}}}
local server = {on_attach = on_attach, capabilities = capabilities, settings = {["rust-analyzer"] = rust_analyzer}}
return M.setup({tools = tools, server = server})
